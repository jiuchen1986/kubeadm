- name: allowed all traffic in iptables FORWARD
  shell: iptables -P FORWARD ACCEPT

- name: save iptables
  shell: iptables-save

- name: add iptables rule to rc.local
  lineinfile:
    path: /etc/rc.d/rc.local
    line: 'iptables -P FORWARD ACCEPT'

- name: add iptables-save to rc.local
  lineinfile:
    path: /etc/rc.d/rc.local
    line: 'iptables-save'
    owner: root
    group: root
    mode: 0755

- name: install crictl
  unarchive:
    src: https://github.com/kubernetes-sigs/cri-tools/releases/download/{{ crictl_version }}/crictl-{{ crictl_version }}-linux-amd64.tar.gz
    dest: /usr/bin
    remote_src: yes
    owner: root
    group: root
    mode: 0755

- name: update yum
  shell: yum -y update
  when: ansible_distribution == 'CentOS' or ansible_distribution == 'RedHat'

- name: update apt
  shell: apt-get update
  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'


- block:

  - name: install docker, apt-transport-https, curl
    shell: apt-get update && apt-get install -y docker.io apt-transport-https curl

  - name: use json-file log driver in docker
    shell: sed -i "s/journald/json-file/g" /etc/sysconfig/docker

  # - name: use cgroupfs cgroup driver in kubelet
    # shell: sed -i "s/cgroupdriver=systemd/cgroupdriver=cgroupfs/g" /usr/lib/systemd/system/docker.service

  - name: start docker service
    systemd:
      name: docker
      enabled: yes
      state: restarted
      daemon_reload: yes

  - name: add kubernetes repo's gpg key
    shell: curl -s https://packages.cloud.google.com/apt/doc/apt-key.gpg | apt-key add -

  - name: add kubernetes apt repo
    shell: echo "deb http://apt.kubernetes.io/ kubernetes-xenial main" > /etc/apt/sources.list.d/kubernetes.list

  - name: install kubelet, kubeadm, kubectl
    shell: apt-get update && apt-get install -y kubelet kubeadm kubectl

  - name: start kubelet service
    systemd:
      name: kubelet
      enabled: yes
      state: restarted
      daemon_reload: yes
    when: inventory_hostname not in groups['lb']


  when: ansible_distribution == 'Debian' or ansible_distribution == 'Ubuntu'

- block:

  - name: install docker
    shell: yum install -y docker

  - name: use json-file log driver in docker
    shell: sed -i "s/journald/json-file/g" /etc/sysconfig/docker

  - name: use cgroupfs cgroup driver in kubelet
    shell: sed -i "s/cgroupdriver=systemd/cgroupdriver=cgroupfs/g" /usr/lib/systemd/system/docker.service

  - name: start docker service
    systemd:
      name: docker
      enabled: yes
      daemon_reload: yes
      state: restarted

  - name: add kubernetes yum repo
    copy:
      src: kubernetes.repo
      dest: /etc/yum.repos.d/kubernetes.repo

  - name: disable selinux
    shell: setenforce 0
    ignore_errors: yes

  - name: config sysctl
    copy:
      src: k8s.conf
      dest: /etc/sysctl.d/k8s.conf

  - shell: sysctl --system

  - name: install kubelet, kubeadm, kubectl
    shell: yum install -y kubelet kubeadm kubectl

  - name: start kubelet service
    systemd:
      name: kubelet
      enabled: yes
      daemon_reload: yes
      state: restarted
    when: inventory_hostname not in groups['lb']

  when: ansible_distribution == 'CentOS' or ansible_distribution == 'RedHat'
